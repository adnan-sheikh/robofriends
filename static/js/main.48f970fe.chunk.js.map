{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","components/Scroll/Scroll.js","components/ErrorBoundary/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","robot","username","SearchBox","value","onSearchChange","type","placeholder","onChange","Scroll","children","style","overflowY","height","border","ErrorBoundary","props","state","hasError","error","info","this","setState","Component","App","handleSearchChange","target","searchField","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BJ,EAA1B,iBAA6CK,IAAKJ,IAC1D,gCACE,6BAAKA,IACL,4BAAIC,WCYGI,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,mCACGA,EAAOC,KAAI,SAACC,GACX,OACE,cAAC,EAAD,CACET,GAAIS,EAAMT,GACVC,KAAMQ,EAAMR,KACZC,MAAOO,EAAMP,OACRO,EAAMC,gBCKRC,EAfG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eAE1B,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,OACLC,YAAY,gBACZH,MAAOA,EACPI,SAAUH,OCMHI,G,YAdA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,qBAAKf,UAAU,SACbgB,MAAO,CACLC,UAAW,SACXC,OAAQ,QACRC,OAAQ,mBAJZ,SAOGJ,MCUQK,E,kDAnBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,kEAEFG,KAAKL,MAAMN,a,GAhBMa,aCmDbC,E,kDA7Cb,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IAaRS,mBAAqB,YAAiB,IAAdC,EAAa,EAAbA,OACtB,EAAKJ,SAAS,CAAEK,YAAaD,EAAOtB,SAbpC,EAAKa,MAAQ,CACXlB,OAAQ,GACR4B,YAAa,IAJE,E,qDAQnB,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKV,SAAS,CAAEvB,OAAQiC,S,oBAO7C,WACE,MAAgCX,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQ4B,EAAhB,EAAgBA,YACVM,EAAiBlC,EAAOmC,QAAO,SAACjC,GACpC,OAAOA,EAAMR,KACV0C,cACAC,SAAST,EAAYQ,kBAG1B,OAAQpC,EAAOsC,OAGb,sBAAK1C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CACES,MAAOuB,EACPtB,eAAgBgB,KAAKI,qBAEvB,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQkC,WAVxB,oBAAItC,UAAU,QAAd,4B,GA5BY4B,aCKHe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.48f970fe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img src={`https://robohash.org/${id}?size=200x200`} alt={name} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <>\r\n      {robots.map((robot) => {\r\n        return (\r\n          <Card\r\n            id={robot.id}\r\n            name={robot.name}\r\n            email={robot.email}\r\n            key={robot.username}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ value, onSearchChange }) => {\r\n\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='text'\r\n        placeholder='search robots'\r\n        value={value}\r\n        onChange={onSearchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport './Scroll.css';\r\n\r\nconst Scroll = ({ children }) => {\r\n  return (\r\n    <div className='scroll'\r\n      style={{\r\n        overflowY: 'scroll',\r\n        height: '800px',\r\n        border: '5px solid black'\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oooops! Something went wrong :( </h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList/CardList';\r\nimport SearchBox from '../components/SearchBox/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary/ErrorBoundary.js';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      robots: [],\r\n      searchField: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  handleSearchChange = ({ target }) => {\r\n    this.setState({ searchField: target.value });\r\n  };\r\n\r\n  render() {\r\n    const { robots, searchField } = this.state;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name\r\n        .toLowerCase()\r\n        .includes(searchField.toLowerCase());\r\n    });\r\n\r\n    return !robots.length ? (\r\n      <h1 className='tc f1'>Loading...</h1>\r\n    ) : (\r\n      <div className='tc'>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n        <SearchBox\r\n          value={searchField}\r\n          onSearchChange={this.handleSearchChange}\r\n        />\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}